04_functionScope-ExecutionContext

	- 10.5_executionContext
		- Execution Context
			- When you run any javascript, a special environemnt is created to handle
			the transformation & execution of code. This is called the execution context.
			It contains the currently running code and everything that aids in its execution.
			- There is a global execution context as well as a function execution
			context for every function invoked
			- IMG01.PNG
		- Executon Context Phases
			- Memory Creation Phase:
				1. Create the global object (browser = window, Node.js = global)
				2. Create the 'this' object and bind it to the global project
				3. Setup memory heap for storing variables and function references
				4. Store functions and variables in global execution context and set
				to "undefined"
			- Execution Phase:
				1. Execute code line by line
				2. Create a new execution context for each function call
		- IMG02.PNG
		- IMG03.PNG

	- 12_theCallStack
		- The Call Stack
			- Stack of functions to be executed
			- Manages execution contexts
			- Stacks are LIFO last in first out
			- IMG04.PNG
		- IMG05.PNG
		- IMG06.PNG

	